{"version":3,"sources":["components/person.js","components/peopletable.js","App.js","index.js"],"names":["getClassNameOfPersonName","person","className","born","died","getClassNameOfPerson","sex","children","length","getClassNameOfCentury","_ref","Person","_ref2","index","react_default","a","createElement","name","mother","father","Math","ceil","PeopleTable","people","map","components_person","getPeople","Object","asyncToGenerator","regenerator_default","mark","_callee","responce","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getFullPeople","_callee2","peopleFromServer","_context2","objectSpread","filter","human","unit","join","App","state","setState","peopletable","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.5318b834.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getClassNameOfPersonName = (person) => {\n  let className = '';\n\n  if (person.born < 1650) {\n    className = 'bornBefore1650';\n  }\n\n  if (person.died > 1800) {\n    className = 'diedAfter1800';\n  }\n  return className;\n};\n\nconst getClassNameOfPerson = (person) => {\n  let className = 'person';\n\n  if (person.sex === 'm') {\n    className += ' person--male';\n  } else {\n    className += ' person--female';\n  }\n\n  if (person.sex === 'm' && person.children.length > 0) {\n    className += ' person--father';\n  }\n\n  if (person.sex === 'f' && person.children.length > 0) {\n    className += ' person--mother';\n  }\n\n  if ((person.died - person.born) > 65) {\n    className += ' livedOver65Years';\n  }\n\n  return className;\n};\n\nconst getClassNameOfCentury = ({ person }) => {\n  return 'person--lived-in-${Math.ceil(person.died / 100)}';\n};\n\nconst Person = ({ person, index }) => (\n  <tr className={getClassNameOfPerson(person)}>\n    <td>\n      {index + 1}\n    </td>\n    <td className={getClassNameOfPersonName(person)}>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.died - person.born}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td className={getClassNameOfCentury(person)}>{Math.ceil(person.died / 100)}</td>\n    <td>{person.children}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    sex: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './person';\n\nconst PeopleTable = ({ people }) => (\n  <table className=\"PeopleTable\">\n    <tr>\n      <th>id</th>\n      <th>name</th>\n      <th>sex</th>\n      <th>age</th>\n      <th>born</th>\n      <th>died</th>\n      <th>mother</th>\n      <th>father</th>\n      <th>century</th>\n      <th>children</th>\n    </tr>\n    <tbody>\n      {people.map((person, index) => (\n        <Person person={person} index={index} />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PeopleTable from './components/peopletable';\nimport './App.css';\n\nconst getPeople = async () => {\n  const responce = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n  return await responce.json();\n};\n\nconst getFullPeople = async () => {\n  const peopleFromServer = await getPeople();\n  return peopleFromServer.map((person) => ({\n    ...person,\n    children: peopleFromServer.filter(\n      (human) => human.father === person.name || human.mother === person.name\n      ).map(unit => unit.name).join(', '),\n  }));\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n  }\n\n  async componentDidMount() {\n    const peopleFromServer = await getFullPeople();\n\n    this.setState({\n      people: peopleFromServer,\n    });\n  }\n\n  render() {\n    return (\n      <main>\n        <h1>\n          People table\n          {this.state.people.length}\n        </h1>\n        <PeopleTable people={this.state.people} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}