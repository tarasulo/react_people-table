{"version":3,"sources":["components/Person.js","components/Peopletable.js","components/sortFunc.js","components/getPeople.js","App.js","index.js"],"names":["getClassNameOfPersonName","person","className","born","died","Person","_ref","getSelect","getClassNameOfPerson","react_default","a","createElement","key","id","onClick","name","sex","age","mother","father","concat","century","children","PeopleTable","people","sortBy","map","index","components_Person","sortFunc","valueForSort","arguments","length","undefined","Object","toConsumableArray","reverse","sort","b","localeCompare","getPeople","asyncToGenerator","regenerator_default","mark","_callee","responce","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","getFullPeople","peopleFromServer","objectSpread","Math","ceil","filter","human","unit","join","App","state","tempPhrase","visiblePeople","selectedPersonId","_this","setState","filterPhrase","event","target","value","toLowerCase","filteredPeople","includes","prevState","type","placeholder","onInput","Peopletable","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.f722e103.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getClassNameOfPersonName = (person) => {\n  let className = '';\n  if (person.born < 1650) {\n    className = 'bornBefore1650';\n  }\n\n  if (person.died > 1800) {\n    className = 'diedAfter1800';\n  }\n  return className;\n};\n\nconst Person = ({ person, getSelect, getClassNameOfPerson }) => (\n  <tr\n    key={person.id}\n    className={getClassNameOfPerson(person)}\n    onClick={() => getSelect(person.id)}\n  >\n    <td>{person.id}</td>\n    <td className={getClassNameOfPersonName(person)}>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.age}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td className={`person--lived-in-${person.century}`}>{person.century}</td>\n    <td>{person.children}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    sex: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    children: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nconst PeopleTable = ({ people, sortBy, getSelect, getClassNameOfPerson }) => (\n  <table className=\"PeopleTable\">\n    <tr>\n      <th onClick={() => sortBy('id')}>id</th>\n      <th onClick={() => sortBy('name')}>name</th>\n      <th>sex</th>\n      <th onClick={() => sortBy('age')}>age</th>\n      <th onClick={() => sortBy('born')}>born</th>\n      <th onClick={() => sortBy('died')}>died</th>\n      <th>mother</th>\n      <th>father</th>\n      <th>century</th>\n      <th>children</th>\n    </tr>\n    <tbody>\n      {people.map((person, index) => (\n        <Person\n          person={person}\n          getSelect={getSelect}\n          getClassNameOfPerson={getClassNameOfPerson}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])).isRequired,\n};\n\nexport default PeopleTable;\n","const sortFunc = (people, valueForSort, isTheSame = false) => {\n  if (isTheSame) {\n    return [...people].reverse();\n  }\n\n  return  [...people].sort((a, b) => {\n    if (valueForSort === 'name') {\n      return a[valueForSort].localeCompare(b[valueForSort]);\n    }\n    return a[valueForSort] - b[valueForSort];\n  });\n};\n\nexport default sortFunc;\n","const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = async () => {\n  const responce = await fetch(url);\n  return await responce.json();\n};\n\nexport default getPeople;\n","import React from 'react';\nimport PeopleTable from './components/Peopletable';\nimport './App.css';\nimport sortFunc from './components/sortFunc';\nimport getPeople from './components/getPeople';\n\nconst getFullPeople = async () => {\n  const peopleFromServer = await getPeople();\n  return peopleFromServer.map((person, index) => ({\n    id: index + 1,\n    ...person,\n    father: person.father || ' ',\n    mother: person.mother || ' ',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: peopleFromServer.filter(\n      human => human.father === person.name || human.mother === person.name\n    ).map(unit => unit.name).join(', '),\n  }));\n};\n\nclass App extends React.Component {\n  people = [];\n  state = {\n    tempPhrase: '',\n    valueForSort: '',\n    visiblePeople: [],\n    selectedPersonId: null,\n  }\n\n  async componentDidMount() {\n    const peopleFromServer = await getFullPeople();\n\n    this.setState({\n      people: peopleFromServer,\n      visiblePeople: peopleFromServer,\n      valueForSort: 'id',\n    });\n  }\n\n  getSelect = (id) => {\n    this.setState({\n      selectedPersonId: id,\n    });\n  }\n\n  getClassNameOfPerson = (person) => {\n    let className = '';\n    if (person.id === this.state.selectedPersonId) {\n      className = 'person selectedPerson';\n    } else {\n      className = 'person';\n    }\n\n    if (person.sex === 'm') {\n      className += ' person--male';\n    } else {\n      className += ' person--female';\n    }\n\n    if (person.sex === 'm' && person.children.length > 0) {\n      className += ' person--father';\n    }\n\n    if (person.sex === 'f' && person.children.length > 0) {\n      className += ' person--mother';\n    }\n\n    if ((person.died - person.born) > 65) {\n      className += ' livedOver65Years';\n    }\n\n    return className;\n  };\n\n  filterPhrase = (event) => {\n    const tempPhrase = event.target.value.toLowerCase();\n\n    const filteredPeople = this.state.people.filter(person => (\n      (person.name + person.father + person.mother).toLowerCase().includes(tempPhrase)\n    ));\n\n    this.setState({\n      visiblePeople: filteredPeople,\n      tempPhrase,\n    });\n  }\n\n  sortBy = (valueForSort) => {\n\n    this.setState(prevState => ({\n      visiblePeople: sortFunc(prevState.visiblePeople, valueForSort, prevState.valueForSort === valueForSort),\n      valueForSort,\n    }));\n  }\n\n  render() {\n    const {visiblePeople} = this.state;\n    return (\n      <main>\n        <h1>\n          People table\n          {visiblePeople.length}\n        </h1>\n        <form>\n          <input\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"filter by name, mother and father\"\n            onInput={this.filterPhrase}\n          />\n        </form>\n\n        <PeopleTable\n          people={visiblePeople}\n          getClassNameOfPerson={this.getClassNameOfPerson}\n          selectedPersonId={this.state.selectedPersonId}\n          getSelect={this.getSelect}\n          sortBy={this.sortBy}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}