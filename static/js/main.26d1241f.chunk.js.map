{"version":3,"sources":["components/Person.js","components/Peopletable.js","components/sortFunc.js","components/getPeople.js","App.js","index.js"],"names":["getClassNameOfPersonName","person","className","born","died","Person","_ref","getSelect","getClassNameOfPerson","react_default","a","createElement","key","id","onClick","name","sex","age","mother","father","concat","century","children","PeopleTable","people","sortBy","map","index","components_Person","currentValue","sortFunc","valueForSort","Object","toConsumableArray","reverse","sort","b","localeCompare","getPeople","asyncToGenerator","regenerator_default","mark","_callee","responce","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getFullPeople","peopleFromServer","objectSpread","Math","ceil","filter","human","unit","join","App","state","tempPhrase","visiblePeople","selectedPersonId","_this","setState","length","filterPhrase","event","target","value","toLowerCase","filteredPeople","includes","prevState","type","placeholder","onInput","Peopletable","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.26d1241f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getClassNameOfPersonName = (person) => {\n  let className = '';\n  if (person.born < 1650) {\n    className = 'bornBefore1650';\n  }\n\n  if (person.died > 1800) {\n    className = 'diedAfter1800';\n  }\n  return className;\n};\n\nconst Person = ({ person, getSelect, getClassNameOfPerson }) => (\n  <tr\n    key={person.id}\n    className={getClassNameOfPerson(person)}\n    onClick={() => getSelect(person.id)}\n  >\n    <td>{person.id}</td>\n    <td className={getClassNameOfPersonName(person)}>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.age}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td className={`person--lived-in-${person.century}`}>{person.century}</td>\n    <td>{person.children}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    sex: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    children: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nconst PeopleTable = ({ people, sortBy, getSelect, getClassNameOfPerson }) => (\n  <table className=\"PeopleTable\">\n    <tr>\n      <th onClick={() => sortBy('id')}>id</th>\n      <th onClick={() => sortBy('name')}>name</th>\n      <th>sex</th>\n      <th onClick={() => sortBy('age')}>age</th>\n      <th onClick={() => sortBy('born')}>born</th>\n      <th onClick={() => sortBy('died')}>died</th>\n      <th>mother</th>\n      <th>father</th>\n      <th>century</th>\n      <th>children</th>\n    </tr>\n    <tbody>\n      {people.map((person, index) => (\n        <Person\n          person={person}\n          getSelect={getSelect}\n          getClassNameOfPerson={getClassNameOfPerson}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])).isRequired,\n};\n\nexport default PeopleTable;\n","let currentValue = '';\n\nconst sortFunc = ({ valueForSort, people }) => {\n  if (currentValue === valueForSort) {\n    return [...people].reverse();\n  }\n\n  currentValue = valueForSort;\n  return [...people].sort((a, b) => {\n    if (currentValue === 'name') {\n      return a[currentValue].localeCompare(b[currentValue]);\n    }\n    return a[currentValue] - b[currentValue];\n  });\n};\n\nexport default sortFunc;\n","const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = async () => {\n  const responce = await fetch(url);\n  return await responce.json();\n};\n\nexport default getPeople;\n","import React from 'react';\nimport PeopleTable from './components/Peopletable';\nimport './App.css';\nimport sortFunc from './components/sortFunc';\nimport getPeople from './components/getPeople';\n\nconst getFullPeople = async () => {\n  const peopleFromServer = await getPeople();\n  return peopleFromServer.map((person, index) => ({\n    id: index + 1,\n    ...person,\n    father: person.father || ' ',\n    mother: person.father || ' ',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: peopleFromServer.filter(\n      human => human.father === person.name || human.mother === person.name\n    ).map(unit => unit.name).join(', '),\n  }));\n};\n\nclass App extends React.Component {\n  people = [];\n  state = {\n    tempPhrase: '',\n    valueForSort: '',\n    visiblePeople: [],\n    selectedPersonId: null,\n  }\n\n  async componentDidMount() {\n    const peopleFromServer = await getFullPeople();\n\n    this.setState({\n      people: peopleFromServer,\n      visiblePeople: peopleFromServer,\n      valueForSort: 'id',\n    });\n  }\n\n  getSelect = (id) => {\n    this.setState({\n      selectedPersonId: id,\n    });\n  }\n\n  getClassNameOfPerson = (person) => {\n    let className = '';\n    if (person.id === this.state.selectedPersonId) {\n      className = 'person selectedPerson';\n    } else {\n      className = 'person';\n    }\n\n    if (person.sex === 'm') {\n      className += ' person--male';\n    } else {\n      className += ' person--female';\n    }\n\n    if (person.sex === 'm' && person.children.length > 0) {\n      className += ' person--father';\n    }\n\n    if (person.sex === 'f' && person.children.length > 0) {\n      className += ' person--mother';\n    }\n\n    if ((person.died - person.born) > 65) {\n      className += ' livedOver65Years';\n    }\n\n    return className;\n  };\n\n  filterPhrase = (event) => {\n    const tempPhrase = event.target.value.toLowerCase();\n\n    const filteredPeople = this.state.people.filter(person => (\n      (person.name + person.father + person.mother).toLowerCase().includes(tempPhrase)\n    ));\n\n    this.setState({\n      visiblePeople: filteredPeople,\n      tempPhrase,\n    });\n  }\n\n  sortBy = (valueForSort) => {\n    this.setState({\n      valueForSort,\n    });\n\n    this.setState(prevState => ({\n      visiblePeople: sortFunc(prevState),\n    }));\n  }\n\n  render() {\n    const {visiblePeople} = this.state;\n    return (\n      <main>\n        <h1>\n          People table\n          {visiblePeople.length}\n        </h1>\n        <form>\n          <input\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"filter by name, mother and father\"\n            onInput={this.filterPhrase}\n          />\n        </form>\n\n        <PeopleTable\n          people={visiblePeople}\n          getClassNameOfPerson={this.getClassNameOfPerson}\n          selectedPersonId={this.state.selectedPersonId}\n          getSelect={this.getSelect}\n          sortBy={this.sortBy}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}